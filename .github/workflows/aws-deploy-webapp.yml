name: Deploy WebApp to AWS

on:
  push:
    branches: [master, dev]
    paths:
      - 'apps/gauzy/**/*.*'
      - 'packages/contracts/**/*.*'
      - 'packages/ui-*/**/*.*'
      - 'packages/plugins/*-ui/**/*.*'
      - '.deploy/webapp/**/*'
      - '.github/workflows/aws-deploy-webapp.yml'
      - 'package.json'
      - 'yarn.lock'
  workflow_dispatch:

jobs:
  check-web-dependencies:
    name: Check and Build Dependencies
    uses: ./.github/workflows/webapp-dependencies.yml
    secrets: inherit

  deploy-webapp:
    name: Deploy WebApp to AWS
    needs: check-web-dependencies
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and tag WebApp image
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg DEPENDENCIES_IMAGE="${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_DEPENDENCIES }}:latest-webapp" -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_WEBAPP }}:$IMAGE_TAG -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_WEBAPP }}:latest -f .deploy/webapp/Dockerfile .

      - name: Push WebApp image to Amazon ECR
        run: |
          docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_WEBAPP }} --all-tags
          echo "webapp_image=${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_WEBAPP }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update WebApp ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ vars.ECS_CLUSTER }} \
            --service ${{ vars.ECS_SERVICE_WEBAPP }} \
            --force-new-deployment

          aws ecs wait services-stable \
            --cluster ${{ vars.ECS_CLUSTER }} \
            --services ${{ vars.ECS_SERVICE_WEBAPP }}
