name: Deploy API to AWS

on:
  push:
    # branches: [master, dev]
    paths:
      - 'apps/api/**/*.*'
      - 'packages/auth/**/*.*'
      - 'packages/common/**/*.*'
      - 'packages/config/**/*.*'
      - 'packages/contracts/**/*.*'
      - 'packages/core/**/*.*'
      - 'packages/desktop-lib/**/*.*'
      - 'packages/plugin/**/*.*'
      - 'packages/utils/**/*.*'
      - 'packages/plugins/changelog/**/*.*'
      - 'packages/plugins/integration-ai/**/*.*'
      - 'packages/plugins/integration-github/**/*.*'
      - 'packages/plugins/integration-hubstaff/**/*.*'
      - 'packages/plugins/integration-jira/**/*.*'
      - 'packages/plugins/integration-upwork/**/*.*'
      - 'packages/plugins/integration-wakatime/**/*.*'
      - 'packages/plugins/jitsu-analytics/**/*.*'
      - 'packages/plugins/job-proposal/**/*.*'
      - 'packages/plugins/job-search/**/*.*'
      - 'packages/plugins/knowledge-base/**/*.*'
      - 'packages/plugins/product-reviews/**/*.*'
      - 'packages/plugins/sentry-tracing/**/*.*'
      - 'packages/plugins/videos/**/*.*'
      - '.deploy/api/**/*'
      - '.github/workflows/aws-deploy-api.yml'
  workflow_run:
    workflows: ['Generate dependencies image']
    types:
      - completed
    # branches: [master, dev]
  workflow_dispatch:

jobs:
  deploy-api:
    name: Deploy API to AWS
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push API image to Amazon ECR
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build --build-arg DEPENDENCIES_IMAGE="${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_DEPENDENCIES }}:latest" -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_API }}:$IMAGE_TAG -t ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_API }}:latest -f .deploy/api/Dockerfile .
          docker push ${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_API }} --all-tags
          echo "api_image=${{ vars.ECR_REGISTRY }}/${{ vars.ECR_REPOSITORY_API }}:$IMAGE_TAG" >> $GITHUB_ENV

      - name: Update API ECS service
        run: |
          aws ecs update-service \
            --cluster ${{ vars.ECS_CLUSTER }} \
            --service ${{ vars.ECS_SERVICE_API }} \
            --force-new-deployment

          aws ecs wait services-stable \
            --cluster ${{ vars.ECS_CLUSTER }} \
            --services ${{ vars.ECS_SERVICE_API }}
